version: "3"
services:
  # 우리가 사용하는 주피터 노트북 서버 컨테이너입니다.
  jupyter:
    image: quay.io/jupyter/datascience-notebook:2024-03-14
    ports:
      - "10000:8888" # 다른 주피터 노트북의 포트와 충돌하지 않게 하기 위해 10000번 포트를 사용합니다.
      - "7862:7862" # gradio 포트
    volumes:
      - ${PWD}:/home/jovyan/work
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_LAB_ENABLE=yes
      - JUPYTER_TOKEN=
      - JUPYTER_ALLOW_ORIGIN=*
      - JUPYTER_NOTEBOOK_DIR=/home/jovyan/work
      - JUPYTER_LAB_DIR=/home/jovyan/work
      - JUPYTER_LAB_PASSWORD=
      - JUPYTER_LAB_TOKEN=
      - JUPYTER_LAB_ALLOW_ORIGIN=*
      - JUPYTER_LAB_URL=/lab
      - JUPYTER_LAB_BASE_URL=/lab
    command:
      [
        "/bin/bash",
        "-c",
        "pip install -r /home/jovyan/work/requirements.txt && start-notebook.sh --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.allow_origin='*'",
      ]
  # 검색엔진을 설치합니다.
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.0
    container_name: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false # 보안 기능 비활성화
      - http.max_header_size=16kb # HTTP 헤더 크기를 8192 바이트에서 16kb로 증가시킴
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    command: >
      bash -c "bin/elasticsearch-plugin install analysis-nori &&
      /usr/local/bin/docker-entrypoint.sh"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

# 네트워크를 추가합니다.
networks:
  default:
    name: jupyter_network
